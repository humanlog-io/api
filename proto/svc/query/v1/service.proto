syntax = "proto3";

package svc.query.v1;

import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "types/v1/logevent.proto";
import "types/v1/logquery.proto";
import "types/v1/session.proto";

option go_package = "svc/query/v1;queryv1";

service QueryService {
  rpc SummarizeEvents(SummarizeEventsRequest) returns (SummarizeEventsResponse);

  rpc WatchQuery(WatchQueryRequest) returns (stream WatchQueryResponse);
}

message SummarizeEventsRequest {
  int64 environment_id = 1;
  optional google.protobuf.Timestamp from = 2;
  optional google.protobuf.Timestamp to = 3;
  uint32 bucket_count = 4;
}

message SummarizeEventsResponse {
  google.protobuf.Duration bucket_width = 1;
  repeated Bucket buckets = 2;

  message Bucket {
    google.protobuf.Timestamp ts = 1;
    uint64 event_count = 2;
  }
}

message WatchQueryRequest {
  int64 environment_id = 1;

  message UnstablePlaintext {
    google.protobuf.Timestamp from = 1;
    google.protobuf.Timestamp to = 2;
    string query = 3;
  }

  types.v1.LogQuery query = 2;
  UnstablePlaintext plaintext_query = 201;
}

message WatchQueryResponse {
  repeated types.v1.LogEventGroup events = 1;
}
