syntax = "proto3";

package svc.organization.v1;

option go_package = "svc/organization/v1;organizationv1";

import "types/v1/environment.proto";
import "types/v1/cursor.proto";
import "types/v1/organization.proto";
import "types/v1/user.proto";
import "types/v1/payment_method.proto";

service OrganizationService {
  rpc CreateEnvironment(CreateEnvironmentRequest) returns (CreateEnvironmentResponse) {}
  rpc ListEnvironment(ListEnvironmentRequest) returns (ListEnvironmentResponse) {}

  rpc ListUser(ListUserRequest) returns (ListUserResponse) {}
  rpc InviteUser(InviteUserRequest) returns (InviteUserResponse) {}
  rpc RevokeUser(RevokeUserRequest) returns (RevokeUserResponse) {}


  // payment
  rpc GetStripePublishableKey(GetStripePublishableKeyRequest) returns (GetStripePublishableKeyResponse) {}
  rpc CreateStripeCustomerSession(CreateStripeCustomerSessionRequest) returns (CreateStripeCustomerSessionResponse) {}
  rpc ListPaymentMethod(ListPaymentMethodRequest) returns (ListPaymentMethodResponse) {}
}

message CreateEnvironmentRequest {
  string environment_name = 1;
}

message CreateEnvironmentResponse {
  types.v1.Environment environment = 1;
}

message ListEnvironmentRequest{
  types.v1.Cursor cursor = 1;
  int32 limit = 2;
}

message ListEnvironmentResponse{
  types.v1.Cursor next = 1;
  message ListItem {
    types.v1.Environment environment = 1;
  }
  repeated ListItem items = 2;
}

message ListUserRequest{
  types.v1.Cursor cursor = 1;
  int32 limit = 2;
}

message ListUserResponse{
  types.v1.Cursor next = 1;
  message ListItem {
    types.v1.User user = 1;
  }
  repeated ListItem items = 2;
}

message InviteUserRequest{
  int64 user_email = 1;
}
message InviteUserResponse{}

message RevokeUserRequest{
  int64 user_id = 1;
}
message RevokeUserResponse{}

message GetStripePublishableKeyRequest{}
message GetStripePublishableKeyResponse{
  string stripe_publishable_key = 2;
}

message CreateStripeCustomerSessionRequest{}
message CreateStripeCustomerSessionResponse{
  string customer_session_client_secret = 1;
}

message ListPaymentMethodRequest{
  types.v1.Cursor cursor = 1;
  int32 limit = 2;
}
message ListPaymentMethodResponse{
  types.v1.Cursor next = 1;
  message ListItem {
    types.v1.PaymentMethod payment_method = 1;
  }
  repeated ListItem items = 2;
}
