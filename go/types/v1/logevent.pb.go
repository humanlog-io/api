// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: types/v1/logevent.proto

package typesv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LogEventGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MachineId int64       `protobuf:"varint,1,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
	SessionId int64       `protobuf:"varint,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Logs      []*LogEvent `protobuf:"bytes,3,rep,name=logs,proto3" json:"logs,omitempty"`
}

func (x *LogEventGroup) Reset() {
	*x = LogEventGroup{}
	mi := &file_types_v1_logevent_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogEventGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEventGroup) ProtoMessage() {}

func (x *LogEventGroup) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_logevent_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEventGroup.ProtoReflect.Descriptor instead.
func (*LogEventGroup) Descriptor() ([]byte, []int) {
	return file_types_v1_logevent_proto_rawDescGZIP(), []int{0}
}

func (x *LogEventGroup) GetMachineId() int64 {
	if x != nil {
		return x.MachineId
	}
	return 0
}

func (x *LogEventGroup) GetSessionId() int64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *LogEventGroup) GetLogs() []*LogEvent {
	if x != nil {
		return x.Logs
	}
	return nil
}

type LogEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParsedAt   *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=parsed_at,json=parsedAt,proto3" json:"parsed_at,omitempty"`
	Raw        []byte                 `protobuf:"bytes,2,opt,name=raw,proto3" json:"raw,omitempty"`
	Structured *StructuredLogEvent    `protobuf:"bytes,3,opt,name=structured,proto3" json:"structured,omitempty"`
}

func (x *LogEvent) Reset() {
	*x = LogEvent{}
	mi := &file_types_v1_logevent_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEvent) ProtoMessage() {}

func (x *LogEvent) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_logevent_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEvent.ProtoReflect.Descriptor instead.
func (*LogEvent) Descriptor() ([]byte, []int) {
	return file_types_v1_logevent_proto_rawDescGZIP(), []int{1}
}

func (x *LogEvent) GetParsedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ParsedAt
	}
	return nil
}

func (x *LogEvent) GetRaw() []byte {
	if x != nil {
		return x.Raw
	}
	return nil
}

func (x *LogEvent) GetStructured() *StructuredLogEvent {
	if x != nil {
		return x.Structured
	}
	return nil
}

type StructuredLogEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Lvl       string                 `protobuf:"bytes,2,opt,name=lvl,proto3" json:"lvl,omitempty"`
	Msg       string                 `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Kvs       []*KV                  `protobuf:"bytes,4,rep,name=kvs,proto3" json:"kvs,omitempty"`
}

func (x *StructuredLogEvent) Reset() {
	*x = StructuredLogEvent{}
	mi := &file_types_v1_logevent_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StructuredLogEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StructuredLogEvent) ProtoMessage() {}

func (x *StructuredLogEvent) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_logevent_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StructuredLogEvent.ProtoReflect.Descriptor instead.
func (*StructuredLogEvent) Descriptor() ([]byte, []int) {
	return file_types_v1_logevent_proto_rawDescGZIP(), []int{2}
}

func (x *StructuredLogEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *StructuredLogEvent) GetLvl() string {
	if x != nil {
		return x.Lvl
	}
	return ""
}

func (x *StructuredLogEvent) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *StructuredLogEvent) GetKvs() []*KV {
	if x != nil {
		return x.Kvs
	}
	return nil
}

type KV struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value *Val   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *KV) Reset() {
	*x = KV{}
	mi := &file_types_v1_logevent_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KV) ProtoMessage() {}

func (x *KV) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_logevent_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KV.ProtoReflect.Descriptor instead.
func (*KV) Descriptor() ([]byte, []int) {
	return file_types_v1_logevent_proto_rawDescGZIP(), []int{3}
}

func (x *KV) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KV) GetValue() *Val {
	if x != nil {
		return x.Value
	}
	return nil
}

type Val struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Kind:
	//
	//	*Val_Str
	//	*Val_F64
	//	*Val_I64
	//	*Val_Bool
	//	*Val_Arr
	//	*Val_Obj
	//	*Val_Ts
	//	*Val_Dur
	Kind isVal_Kind `protobuf_oneof:"kind"`
}

func (x *Val) Reset() {
	*x = Val{}
	mi := &file_types_v1_logevent_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Val) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Val) ProtoMessage() {}

func (x *Val) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_logevent_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Val.ProtoReflect.Descriptor instead.
func (*Val) Descriptor() ([]byte, []int) {
	return file_types_v1_logevent_proto_rawDescGZIP(), []int{4}
}

func (m *Val) GetKind() isVal_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *Val) GetStr() string {
	if x, ok := x.GetKind().(*Val_Str); ok {
		return x.Str
	}
	return ""
}

func (x *Val) GetF64() float64 {
	if x, ok := x.GetKind().(*Val_F64); ok {
		return x.F64
	}
	return 0
}

func (x *Val) GetI64() int64 {
	if x, ok := x.GetKind().(*Val_I64); ok {
		return x.I64
	}
	return 0
}

func (x *Val) GetBool() bool {
	if x, ok := x.GetKind().(*Val_Bool); ok {
		return x.Bool
	}
	return false
}

func (x *Val) GetArr() *Arr {
	if x, ok := x.GetKind().(*Val_Arr); ok {
		return x.Arr
	}
	return nil
}

func (x *Val) GetObj() *Obj {
	if x, ok := x.GetKind().(*Val_Obj); ok {
		return x.Obj
	}
	return nil
}

func (x *Val) GetTs() *timestamppb.Timestamp {
	if x, ok := x.GetKind().(*Val_Ts); ok {
		return x.Ts
	}
	return nil
}

func (x *Val) GetDur() *durationpb.Duration {
	if x, ok := x.GetKind().(*Val_Dur); ok {
		return x.Dur
	}
	return nil
}

type isVal_Kind interface {
	isVal_Kind()
}

type Val_Str struct {
	Str string `protobuf:"bytes,1,opt,name=str,proto3,oneof"`
}

type Val_F64 struct {
	F64 float64 `protobuf:"fixed64,2,opt,name=f64,proto3,oneof"`
}

type Val_I64 struct {
	I64 int64 `protobuf:"varint,3,opt,name=i64,proto3,oneof"`
}

type Val_Bool struct {
	Bool bool `protobuf:"varint,4,opt,name=bool,proto3,oneof"`
}

type Val_Arr struct {
	Arr *Arr `protobuf:"bytes,5,opt,name=arr,proto3,oneof"`
}

type Val_Obj struct {
	Obj *Obj `protobuf:"bytes,6,opt,name=obj,proto3,oneof"`
}

type Val_Ts struct {
	Ts *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=ts,proto3,oneof"`
}

type Val_Dur struct {
	Dur *durationpb.Duration `protobuf:"bytes,8,opt,name=dur,proto3,oneof"`
}

func (*Val_Str) isVal_Kind() {}

func (*Val_F64) isVal_Kind() {}

func (*Val_I64) isVal_Kind() {}

func (*Val_Bool) isVal_Kind() {}

func (*Val_Arr) isVal_Kind() {}

func (*Val_Obj) isVal_Kind() {}

func (*Val_Ts) isVal_Kind() {}

func (*Val_Dur) isVal_Kind() {}

type Obj struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kvs []*KV `protobuf:"bytes,1,rep,name=kvs,proto3" json:"kvs,omitempty"`
}

func (x *Obj) Reset() {
	*x = Obj{}
	mi := &file_types_v1_logevent_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Obj) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Obj) ProtoMessage() {}

func (x *Obj) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_logevent_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Obj.ProtoReflect.Descriptor instead.
func (*Obj) Descriptor() ([]byte, []int) {
	return file_types_v1_logevent_proto_rawDescGZIP(), []int{5}
}

func (x *Obj) GetKvs() []*KV {
	if x != nil {
		return x.Kvs
	}
	return nil
}

type Arr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Val `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *Arr) Reset() {
	*x = Arr{}
	mi := &file_types_v1_logevent_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Arr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Arr) ProtoMessage() {}

func (x *Arr) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_logevent_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Arr.ProtoReflect.Descriptor instead.
func (*Arr) Descriptor() ([]byte, []int) {
	return file_types_v1_logevent_proto_rawDescGZIP(), []int{6}
}

func (x *Arr) GetItems() []*Val {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_types_v1_logevent_proto protoreflect.FileDescriptor

var file_types_v1_logevent_proto_rawDesc = []byte{
	0x0a, 0x17, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x6f, 0x67, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x75, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x22, 0x93, 0x01, 0x0a, 0x08,
	0x4c, 0x6f, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x73,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x70, 0x61, 0x72, 0x73, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03,
	0x72, 0x61, 0x77, 0x12, 0x3c, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64, 0x4c, 0x6f, 0x67,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x64, 0x22, 0x92, 0x01, 0x0a, 0x12, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64,
	0x4c, 0x6f, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x76, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6c, 0x76, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x03, 0x6b, 0x76, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4b,
	0x56, 0x52, 0x03, 0x6b, 0x76, 0x73, 0x22, 0x3b, 0x0a, 0x02, 0x4b, 0x56, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x23,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x82, 0x02, 0x0a, 0x03, 0x56, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x03, 0x73,
	0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x73, 0x74, 0x72, 0x12,
	0x12, 0x0a, 0x03, 0x66, 0x36, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x03,
	0x66, 0x36, 0x34, 0x12, 0x12, 0x0a, 0x03, 0x69, 0x36, 0x34, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x00, 0x52, 0x03, 0x69, 0x36, 0x34, 0x12, 0x14, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x12, 0x21, 0x0a,
	0x03, 0x61, 0x72, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x72, 0x48, 0x00, 0x52, 0x03, 0x61, 0x72, 0x72,
	0x12, 0x21, 0x0a, 0x03, 0x6f, 0x62, 0x6a, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x48, 0x00, 0x52, 0x03,
	0x6f, 0x62, 0x6a, 0x12, 0x2c, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x02, 0x74,
	0x73, 0x12, 0x2d, 0x0a, 0x03, 0x64, 0x75, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x03, 0x64, 0x75, 0x72,
	0x42, 0x06, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22, 0x25, 0x0a, 0x03, 0x4f, 0x62, 0x6a, 0x12,
	0x1e, 0x0a, 0x03, 0x6b, 0x76, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x56, 0x52, 0x03, 0x6b, 0x76, 0x73, 0x22,
	0x2a, 0x0a, 0x03, 0x41, 0x72, 0x72, 0x12, 0x23, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x61, 0x6c, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x8d, 0x01, 0x0a, 0x0c,
	0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x42, 0x0d, 0x4c, 0x6f,
	0x67, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2d, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6c,
	0x6f, 0x67, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2f, 0x76, 0x31, 0x3b, 0x74, 0x79, 0x70, 0x65, 0x73, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x54,
	0x58, 0x58, 0xaa, 0x02, 0x08, 0x54, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x08,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x14, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x09, 0x54, 0x79, 0x70, 0x65, 0x73, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_types_v1_logevent_proto_rawDescOnce sync.Once
	file_types_v1_logevent_proto_rawDescData = file_types_v1_logevent_proto_rawDesc
)

func file_types_v1_logevent_proto_rawDescGZIP() []byte {
	file_types_v1_logevent_proto_rawDescOnce.Do(func() {
		file_types_v1_logevent_proto_rawDescData = protoimpl.X.CompressGZIP(file_types_v1_logevent_proto_rawDescData)
	})
	return file_types_v1_logevent_proto_rawDescData
}

var file_types_v1_logevent_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_types_v1_logevent_proto_goTypes = []any{
	(*LogEventGroup)(nil),         // 0: types.v1.LogEventGroup
	(*LogEvent)(nil),              // 1: types.v1.LogEvent
	(*StructuredLogEvent)(nil),    // 2: types.v1.StructuredLogEvent
	(*KV)(nil),                    // 3: types.v1.KV
	(*Val)(nil),                   // 4: types.v1.Val
	(*Obj)(nil),                   // 5: types.v1.Obj
	(*Arr)(nil),                   // 6: types.v1.Arr
	(*timestamppb.Timestamp)(nil), // 7: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),   // 8: google.protobuf.Duration
}
var file_types_v1_logevent_proto_depIdxs = []int32{
	1,  // 0: types.v1.LogEventGroup.logs:type_name -> types.v1.LogEvent
	7,  // 1: types.v1.LogEvent.parsed_at:type_name -> google.protobuf.Timestamp
	2,  // 2: types.v1.LogEvent.structured:type_name -> types.v1.StructuredLogEvent
	7,  // 3: types.v1.StructuredLogEvent.timestamp:type_name -> google.protobuf.Timestamp
	3,  // 4: types.v1.StructuredLogEvent.kvs:type_name -> types.v1.KV
	4,  // 5: types.v1.KV.value:type_name -> types.v1.Val
	6,  // 6: types.v1.Val.arr:type_name -> types.v1.Arr
	5,  // 7: types.v1.Val.obj:type_name -> types.v1.Obj
	7,  // 8: types.v1.Val.ts:type_name -> google.protobuf.Timestamp
	8,  // 9: types.v1.Val.dur:type_name -> google.protobuf.Duration
	3,  // 10: types.v1.Obj.kvs:type_name -> types.v1.KV
	4,  // 11: types.v1.Arr.items:type_name -> types.v1.Val
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_types_v1_logevent_proto_init() }
func file_types_v1_logevent_proto_init() {
	if File_types_v1_logevent_proto != nil {
		return
	}
	file_types_v1_logevent_proto_msgTypes[4].OneofWrappers = []any{
		(*Val_Str)(nil),
		(*Val_F64)(nil),
		(*Val_I64)(nil),
		(*Val_Bool)(nil),
		(*Val_Arr)(nil),
		(*Val_Obj)(nil),
		(*Val_Ts)(nil),
		(*Val_Dur)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_types_v1_logevent_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_types_v1_logevent_proto_goTypes,
		DependencyIndexes: file_types_v1_logevent_proto_depIdxs,
		MessageInfos:      file_types_v1_logevent_proto_msgTypes,
	}.Build()
	File_types_v1_logevent_proto = out.File
	file_types_v1_logevent_proto_rawDesc = nil
	file_types_v1_logevent_proto_goTypes = nil
	file_types_v1_logevent_proto_depIdxs = nil
}
