// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        (unknown)
// source: types/v1/types.proto

package typesv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VarType int32

const (
	VarType_unknown VarType = 0
	VarType_str     VarType = 1
	VarType_f64     VarType = 2
	VarType_i64     VarType = 3
	VarType_bool    VarType = 4
	VarType_arr     VarType = 5
	VarType_obj     VarType = 6
	VarType_ts      VarType = 7
	VarType_dur     VarType = 8
)

// Enum value maps for VarType.
var (
	VarType_name = map[int32]string{
		0: "unknown",
		1: "str",
		2: "f64",
		3: "i64",
		4: "bool",
		5: "arr",
		6: "obj",
		7: "ts",
		8: "dur",
	}
	VarType_value = map[string]int32{
		"unknown": 0,
		"str":     1,
		"f64":     2,
		"i64":     3,
		"bool":    4,
		"arr":     5,
		"obj":     6,
		"ts":      7,
		"dur":     8,
	}
)

func (x VarType) Enum() *VarType {
	p := new(VarType)
	*p = x
	return p
}

func (x VarType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VarType) Descriptor() protoreflect.EnumDescriptor {
	return file_types_v1_types_proto_enumTypes[0].Descriptor()
}

func (VarType) Type() protoreflect.EnumType {
	return &file_types_v1_types_proto_enumTypes[0]
}

func (x VarType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VarType.Descriptor instead.
func (VarType) EnumDescriptor() ([]byte, []int) {
	return file_types_v1_types_proto_rawDescGZIP(), []int{0}
}

type KV struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         *Val                   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KV) Reset() {
	*x = KV{}
	mi := &file_types_v1_types_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KV) ProtoMessage() {}

func (x *KV) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_types_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KV.ProtoReflect.Descriptor instead.
func (*KV) Descriptor() ([]byte, []int) {
	return file_types_v1_types_proto_rawDescGZIP(), []int{0}
}

func (x *KV) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KV) GetValue() *Val {
	if x != nil {
		return x.Value
	}
	return nil
}

type Val struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Type  VarType                `protobuf:"varint,100,opt,name=type,proto3,enum=types.v1.VarType" json:"type,omitempty"`
	// Types that are valid to be assigned to Kind:
	//
	//	*Val_Str
	//	*Val_F64
	//	*Val_I64
	//	*Val_Bool
	//	*Val_Arr
	//	*Val_Obj
	//	*Val_Ts
	//	*Val_Dur
	Kind          isVal_Kind `protobuf_oneof:"kind"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Val) Reset() {
	*x = Val{}
	mi := &file_types_v1_types_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Val) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Val) ProtoMessage() {}

func (x *Val) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_types_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Val.ProtoReflect.Descriptor instead.
func (*Val) Descriptor() ([]byte, []int) {
	return file_types_v1_types_proto_rawDescGZIP(), []int{1}
}

func (x *Val) GetType() VarType {
	if x != nil {
		return x.Type
	}
	return VarType_unknown
}

func (x *Val) GetKind() isVal_Kind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *Val) GetStr() string {
	if x != nil {
		if x, ok := x.Kind.(*Val_Str); ok {
			return x.Str
		}
	}
	return ""
}

func (x *Val) GetF64() float64 {
	if x != nil {
		if x, ok := x.Kind.(*Val_F64); ok {
			return x.F64
		}
	}
	return 0
}

func (x *Val) GetI64() int64 {
	if x != nil {
		if x, ok := x.Kind.(*Val_I64); ok {
			return x.I64
		}
	}
	return 0
}

func (x *Val) GetBool() bool {
	if x != nil {
		if x, ok := x.Kind.(*Val_Bool); ok {
			return x.Bool
		}
	}
	return false
}

func (x *Val) GetArr() *Arr {
	if x != nil {
		if x, ok := x.Kind.(*Val_Arr); ok {
			return x.Arr
		}
	}
	return nil
}

func (x *Val) GetObj() *Obj {
	if x != nil {
		if x, ok := x.Kind.(*Val_Obj); ok {
			return x.Obj
		}
	}
	return nil
}

func (x *Val) GetTs() *timestamppb.Timestamp {
	if x != nil {
		if x, ok := x.Kind.(*Val_Ts); ok {
			return x.Ts
		}
	}
	return nil
}

func (x *Val) GetDur() *durationpb.Duration {
	if x != nil {
		if x, ok := x.Kind.(*Val_Dur); ok {
			return x.Dur
		}
	}
	return nil
}

type isVal_Kind interface {
	isVal_Kind()
}

type Val_Str struct {
	Str string `protobuf:"bytes,201,opt,name=str,proto3,oneof"`
}

type Val_F64 struct {
	F64 float64 `protobuf:"fixed64,202,opt,name=f64,proto3,oneof"`
}

type Val_I64 struct {
	I64 int64 `protobuf:"varint,203,opt,name=i64,proto3,oneof"`
}

type Val_Bool struct {
	Bool bool `protobuf:"varint,204,opt,name=bool,proto3,oneof"`
}

type Val_Arr struct {
	Arr *Arr `protobuf:"bytes,205,opt,name=arr,proto3,oneof"`
}

type Val_Obj struct {
	Obj *Obj `protobuf:"bytes,206,opt,name=obj,proto3,oneof"`
}

type Val_Ts struct {
	Ts *timestamppb.Timestamp `protobuf:"bytes,207,opt,name=ts,proto3,oneof"`
}

type Val_Dur struct {
	Dur *durationpb.Duration `protobuf:"bytes,208,opt,name=dur,proto3,oneof"`
}

func (*Val_Str) isVal_Kind() {}

func (*Val_F64) isVal_Kind() {}

func (*Val_I64) isVal_Kind() {}

func (*Val_Bool) isVal_Kind() {}

func (*Val_Arr) isVal_Kind() {}

func (*Val_Obj) isVal_Kind() {}

func (*Val_Ts) isVal_Kind() {}

func (*Val_Dur) isVal_Kind() {}

type Obj struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Kvs           []*KV                  `protobuf:"bytes,1,rep,name=kvs,proto3" json:"kvs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Obj) Reset() {
	*x = Obj{}
	mi := &file_types_v1_types_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Obj) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Obj) ProtoMessage() {}

func (x *Obj) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_types_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Obj.ProtoReflect.Descriptor instead.
func (*Obj) Descriptor() ([]byte, []int) {
	return file_types_v1_types_proto_rawDescGZIP(), []int{2}
}

func (x *Obj) GetKvs() []*KV {
	if x != nil {
		return x.Kvs
	}
	return nil
}

type Arr struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*Val                 `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Arr) Reset() {
	*x = Arr{}
	mi := &file_types_v1_types_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Arr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Arr) ProtoMessage() {}

func (x *Arr) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_types_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Arr.ProtoReflect.Descriptor instead.
func (*Arr) Descriptor() ([]byte, []int) {
	return file_types_v1_types_proto_rawDescGZIP(), []int{3}
}

func (x *Arr) GetItems() []*Val {
	if x != nil {
		return x.Items
	}
	return nil
}

type Scalar struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Type  VarType                `protobuf:"varint,100,opt,name=type,proto3,enum=types.v1.VarType" json:"type,omitempty"`
	// Types that are valid to be assigned to Kind:
	//
	//	*Scalar_Str
	//	*Scalar_F64
	//	*Scalar_I64
	//	*Scalar_Bool
	//	*Scalar_Ts
	//	*Scalar_Dur
	Kind          isScalar_Kind `protobuf_oneof:"kind"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Scalar) Reset() {
	*x = Scalar{}
	mi := &file_types_v1_types_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Scalar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scalar) ProtoMessage() {}

func (x *Scalar) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_types_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scalar.ProtoReflect.Descriptor instead.
func (*Scalar) Descriptor() ([]byte, []int) {
	return file_types_v1_types_proto_rawDescGZIP(), []int{4}
}

func (x *Scalar) GetType() VarType {
	if x != nil {
		return x.Type
	}
	return VarType_unknown
}

func (x *Scalar) GetKind() isScalar_Kind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *Scalar) GetStr() string {
	if x != nil {
		if x, ok := x.Kind.(*Scalar_Str); ok {
			return x.Str
		}
	}
	return ""
}

func (x *Scalar) GetF64() float64 {
	if x != nil {
		if x, ok := x.Kind.(*Scalar_F64); ok {
			return x.F64
		}
	}
	return 0
}

func (x *Scalar) GetI64() int64 {
	if x != nil {
		if x, ok := x.Kind.(*Scalar_I64); ok {
			return x.I64
		}
	}
	return 0
}

func (x *Scalar) GetBool() bool {
	if x != nil {
		if x, ok := x.Kind.(*Scalar_Bool); ok {
			return x.Bool
		}
	}
	return false
}

func (x *Scalar) GetTs() *timestamppb.Timestamp {
	if x != nil {
		if x, ok := x.Kind.(*Scalar_Ts); ok {
			return x.Ts
		}
	}
	return nil
}

func (x *Scalar) GetDur() *durationpb.Duration {
	if x != nil {
		if x, ok := x.Kind.(*Scalar_Dur); ok {
			return x.Dur
		}
	}
	return nil
}

type isScalar_Kind interface {
	isScalar_Kind()
}

type Scalar_Str struct {
	Str string `protobuf:"bytes,201,opt,name=str,proto3,oneof"`
}

type Scalar_F64 struct {
	F64 float64 `protobuf:"fixed64,202,opt,name=f64,proto3,oneof"`
}

type Scalar_I64 struct {
	I64 int64 `protobuf:"varint,203,opt,name=i64,proto3,oneof"`
}

type Scalar_Bool struct {
	Bool bool `protobuf:"varint,204,opt,name=bool,proto3,oneof"`
}

type Scalar_Ts struct {
	Ts *timestamppb.Timestamp `protobuf:"bytes,207,opt,name=ts,proto3,oneof"`
}

type Scalar_Dur struct {
	Dur *durationpb.Duration `protobuf:"bytes,208,opt,name=dur,proto3,oneof"`
}

func (*Scalar_Str) isScalar_Kind() {}

func (*Scalar_F64) isScalar_Kind() {}

func (*Scalar_I64) isScalar_Kind() {}

func (*Scalar_Bool) isScalar_Kind() {}

func (*Scalar_Ts) isScalar_Kind() {}

func (*Scalar_Dur) isScalar_Kind() {}

type FlatKV struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         *Scalar                `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FlatKV) Reset() {
	*x = FlatKV{}
	mi := &file_types_v1_types_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlatKV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlatKV) ProtoMessage() {}

func (x *FlatKV) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_types_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlatKV.ProtoReflect.Descriptor instead.
func (*FlatKV) Descriptor() ([]byte, []int) {
	return file_types_v1_types_proto_rawDescGZIP(), []int{5}
}

func (x *FlatKV) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *FlatKV) GetValue() *Scalar {
	if x != nil {
		return x.Value
	}
	return nil
}

type FlatArr struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*Scalar              `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FlatArr) Reset() {
	*x = FlatArr{}
	mi := &file_types_v1_types_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlatArr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlatArr) ProtoMessage() {}

func (x *FlatArr) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_types_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlatArr.ProtoReflect.Descriptor instead.
func (*FlatArr) Descriptor() ([]byte, []int) {
	return file_types_v1_types_proto_rawDescGZIP(), []int{6}
}

func (x *FlatArr) GetItems() []*Scalar {
	if x != nil {
		return x.Items
	}
	return nil
}

type Table struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Columns       []*Table_Column        `protobuf:"bytes,1,rep,name=columns,proto3" json:"columns,omitempty"`
	Rows          []*FlatArr             `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Table) Reset() {
	*x = Table{}
	mi := &file_types_v1_types_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Table) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Table) ProtoMessage() {}

func (x *Table) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_types_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Table.ProtoReflect.Descriptor instead.
func (*Table) Descriptor() ([]byte, []int) {
	return file_types_v1_types_proto_rawDescGZIP(), []int{7}
}

func (x *Table) GetColumns() []*Table_Column {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *Table) GetRows() []*FlatArr {
	if x != nil {
		return x.Rows
	}
	return nil
}

type Table_Column struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          VarType                `protobuf:"varint,2,opt,name=type,proto3,enum=types.v1.VarType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Table_Column) Reset() {
	*x = Table_Column{}
	mi := &file_types_v1_types_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Table_Column) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Table_Column) ProtoMessage() {}

func (x *Table_Column) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_types_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Table_Column.ProtoReflect.Descriptor instead.
func (*Table_Column) Descriptor() ([]byte, []int) {
	return file_types_v1_types_proto_rawDescGZIP(), []int{7, 0}
}

func (x *Table_Column) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Table_Column) GetType() VarType {
	if x != nil {
		return x.Type
	}
	return VarType_unknown
}

var File_types_v1_types_proto protoreflect.FileDescriptor

var file_types_v1_types_proto_rawDesc = []byte{
	0x0a, 0x14, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x3b, 0x0a, 0x02, 0x4b, 0x56, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xb1,
	0x02, 0x0a, 0x03, 0x56, 0x61, 0x6c, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a,
	0x03, 0x73, 0x74, 0x72, 0x18, 0xc9, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x73,
	0x74, 0x72, 0x12, 0x13, 0x0a, 0x03, 0x66, 0x36, 0x34, 0x18, 0xca, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x48, 0x00, 0x52, 0x03, 0x66, 0x36, 0x34, 0x12, 0x13, 0x0a, 0x03, 0x69, 0x36, 0x34, 0x18, 0xcb,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x03, 0x69, 0x36, 0x34, 0x12, 0x15, 0x0a, 0x04,
	0x62, 0x6f, 0x6f, 0x6c, 0x18, 0xcc, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x04, 0x62,
	0x6f, 0x6f, 0x6c, 0x12, 0x22, 0x0a, 0x03, 0x61, 0x72, 0x72, 0x18, 0xcd, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x72,
	0x48, 0x00, 0x52, 0x03, 0x61, 0x72, 0x72, 0x12, 0x22, 0x0a, 0x03, 0x6f, 0x62, 0x6a, 0x18, 0xce,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x62, 0x6a, 0x48, 0x00, 0x52, 0x03, 0x6f, 0x62, 0x6a, 0x12, 0x2d, 0x0a, 0x02, 0x74,
	0x73, 0x18, 0xcf, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x02, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x03, 0x64, 0x75,
	0x72, 0x18, 0xd0, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x03, 0x64, 0x75, 0x72, 0x42, 0x06, 0x0a, 0x04, 0x6b, 0x69,
	0x6e, 0x64, 0x22, 0x25, 0x0a, 0x03, 0x4f, 0x62, 0x6a, 0x12, 0x1e, 0x0a, 0x03, 0x6b, 0x76, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x4b, 0x56, 0x52, 0x03, 0x6b, 0x76, 0x73, 0x22, 0x2a, 0x0a, 0x03, 0x41, 0x72, 0x72,
	0x12, 0x23, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xec, 0x01, 0x0a, 0x06, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72,
	0x12, 0x25, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x03, 0x73, 0x74, 0x72, 0x18, 0xc9,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x73, 0x74, 0x72, 0x12, 0x13, 0x0a, 0x03,
	0x66, 0x36, 0x34, 0x18, 0xca, 0x01, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x03, 0x66, 0x36,
	0x34, 0x12, 0x13, 0x0a, 0x03, 0x69, 0x36, 0x34, 0x18, 0xcb, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x00, 0x52, 0x03, 0x69, 0x36, 0x34, 0x12, 0x15, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0xcc,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x12, 0x2d, 0x0a,
	0x02, 0x74, 0x73, 0x18, 0xcf, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x02, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x03,
	0x64, 0x75, 0x72, 0x18, 0xd0, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x03, 0x64, 0x75, 0x72, 0x42, 0x06, 0x0a, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x22, 0x42, 0x0a, 0x06, 0x46, 0x6c, 0x61, 0x74, 0x4b, 0x56, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x61,
	0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x31, 0x0a, 0x07, 0x46, 0x6c, 0x61, 0x74,
	0x41, 0x72, 0x72, 0x12, 0x26, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63,
	0x61, 0x6c, 0x61, 0x72, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xa5, 0x01, 0x0a, 0x05,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x07,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x25, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x6c, 0x61, 0x74, 0x41, 0x72, 0x72, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x1a, 0x43,
	0x0a, 0x06, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x2a, 0x5e, 0x0a, 0x07, 0x56, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b,
	0x0a, 0x07, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x73,
	0x74, 0x72, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x66, 0x36, 0x34, 0x10, 0x02, 0x12, 0x07, 0x0a,
	0x03, 0x69, 0x36, 0x34, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x10, 0x04,
	0x12, 0x07, 0x0a, 0x03, 0x61, 0x72, 0x72, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x6f, 0x62, 0x6a,
	0x10, 0x06, 0x12, 0x06, 0x0a, 0x02, 0x74, 0x73, 0x10, 0x07, 0x12, 0x07, 0x0a, 0x03, 0x64, 0x75,
	0x72, 0x10, 0x08, 0x42, 0x8a, 0x01, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x42, 0x0a, 0x54, 0x79, 0x70, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68,
	0x75, 0x6d, 0x61, 0x6e, 0x6c, 0x6f, 0x67, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6f,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x74, 0x79, 0x70, 0x65, 0x73, 0x76,
	0x31, 0xa2, 0x02, 0x03, 0x54, 0x58, 0x58, 0xaa, 0x02, 0x08, 0x54, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x56, 0x31, 0xca, 0x02, 0x08, 0x54, 0x79, 0x70, 0x65, 0x73, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x14,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x09, 0x54, 0x79, 0x70, 0x65, 0x73, 0x3a, 0x3a, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_types_v1_types_proto_rawDescOnce sync.Once
	file_types_v1_types_proto_rawDescData = file_types_v1_types_proto_rawDesc
)

func file_types_v1_types_proto_rawDescGZIP() []byte {
	file_types_v1_types_proto_rawDescOnce.Do(func() {
		file_types_v1_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_types_v1_types_proto_rawDescData)
	})
	return file_types_v1_types_proto_rawDescData
}

var file_types_v1_types_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_types_v1_types_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_types_v1_types_proto_goTypes = []any{
	(VarType)(0),                  // 0: types.v1.VarType
	(*KV)(nil),                    // 1: types.v1.KV
	(*Val)(nil),                   // 2: types.v1.Val
	(*Obj)(nil),                   // 3: types.v1.Obj
	(*Arr)(nil),                   // 4: types.v1.Arr
	(*Scalar)(nil),                // 5: types.v1.Scalar
	(*FlatKV)(nil),                // 6: types.v1.FlatKV
	(*FlatArr)(nil),               // 7: types.v1.FlatArr
	(*Table)(nil),                 // 8: types.v1.Table
	(*Table_Column)(nil),          // 9: types.v1.Table.Column
	(*timestamppb.Timestamp)(nil), // 10: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),   // 11: google.protobuf.Duration
}
var file_types_v1_types_proto_depIdxs = []int32{
	2,  // 0: types.v1.KV.value:type_name -> types.v1.Val
	0,  // 1: types.v1.Val.type:type_name -> types.v1.VarType
	4,  // 2: types.v1.Val.arr:type_name -> types.v1.Arr
	3,  // 3: types.v1.Val.obj:type_name -> types.v1.Obj
	10, // 4: types.v1.Val.ts:type_name -> google.protobuf.Timestamp
	11, // 5: types.v1.Val.dur:type_name -> google.protobuf.Duration
	1,  // 6: types.v1.Obj.kvs:type_name -> types.v1.KV
	2,  // 7: types.v1.Arr.items:type_name -> types.v1.Val
	0,  // 8: types.v1.Scalar.type:type_name -> types.v1.VarType
	10, // 9: types.v1.Scalar.ts:type_name -> google.protobuf.Timestamp
	11, // 10: types.v1.Scalar.dur:type_name -> google.protobuf.Duration
	5,  // 11: types.v1.FlatKV.value:type_name -> types.v1.Scalar
	5,  // 12: types.v1.FlatArr.items:type_name -> types.v1.Scalar
	9,  // 13: types.v1.Table.columns:type_name -> types.v1.Table.Column
	7,  // 14: types.v1.Table.rows:type_name -> types.v1.FlatArr
	0,  // 15: types.v1.Table.Column.type:type_name -> types.v1.VarType
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_types_v1_types_proto_init() }
func file_types_v1_types_proto_init() {
	if File_types_v1_types_proto != nil {
		return
	}
	file_types_v1_types_proto_msgTypes[1].OneofWrappers = []any{
		(*Val_Str)(nil),
		(*Val_F64)(nil),
		(*Val_I64)(nil),
		(*Val_Bool)(nil),
		(*Val_Arr)(nil),
		(*Val_Obj)(nil),
		(*Val_Ts)(nil),
		(*Val_Dur)(nil),
	}
	file_types_v1_types_proto_msgTypes[4].OneofWrappers = []any{
		(*Scalar_Str)(nil),
		(*Scalar_F64)(nil),
		(*Scalar_I64)(nil),
		(*Scalar_Bool)(nil),
		(*Scalar_Ts)(nil),
		(*Scalar_Dur)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_types_v1_types_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_types_v1_types_proto_goTypes,
		DependencyIndexes: file_types_v1_types_proto_depIdxs,
		EnumInfos:         file_types_v1_types_proto_enumTypes,
		MessageInfos:      file_types_v1_types_proto_msgTypes,
	}.Build()
	File_types_v1_types_proto = out.File
	file_types_v1_types_proto_rawDesc = nil
	file_types_v1_types_proto_goTypes = nil
	file_types_v1_types_proto_depIdxs = nil
}
