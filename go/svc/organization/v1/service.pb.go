// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: svc/organization/v1/service.proto

package organizationv1

import (
	v1 "github.com/humanlogio/api/go/types/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateEnvironmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnvironmentName string `protobuf:"bytes,1,opt,name=environment_name,json=environmentName,proto3" json:"environment_name,omitempty"`
	// Types that are assignable to Payment:
	//
	//	*CreateEnvironmentRequest_Stripe_
	Payment isCreateEnvironmentRequest_Payment `protobuf_oneof:"payment"`
}

func (x *CreateEnvironmentRequest) Reset() {
	*x = CreateEnvironmentRequest{}
	mi := &file_svc_organization_v1_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEnvironmentRequest) ProtoMessage() {}

func (x *CreateEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_organization_v1_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEnvironmentRequest.ProtoReflect.Descriptor instead.
func (*CreateEnvironmentRequest) Descriptor() ([]byte, []int) {
	return file_svc_organization_v1_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateEnvironmentRequest) GetEnvironmentName() string {
	if x != nil {
		return x.EnvironmentName
	}
	return ""
}

func (m *CreateEnvironmentRequest) GetPayment() isCreateEnvironmentRequest_Payment {
	if m != nil {
		return m.Payment
	}
	return nil
}

func (x *CreateEnvironmentRequest) GetStripe() *CreateEnvironmentRequest_Stripe {
	if x, ok := x.GetPayment().(*CreateEnvironmentRequest_Stripe_); ok {
		return x.Stripe
	}
	return nil
}

type isCreateEnvironmentRequest_Payment interface {
	isCreateEnvironmentRequest_Payment()
}

type CreateEnvironmentRequest_Stripe_ struct {
	Stripe *CreateEnvironmentRequest_Stripe `protobuf:"bytes,201,opt,name=stripe,proto3,oneof"`
}

func (*CreateEnvironmentRequest_Stripe_) isCreateEnvironmentRequest_Payment() {}

type CreateEnvironmentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Environment *v1.Environment `protobuf:"bytes,1,opt,name=environment,proto3" json:"environment,omitempty"`
	// Types that are assignable to Payment:
	//
	//	*CreateEnvironmentResponse_Stripe_
	Payment isCreateEnvironmentResponse_Payment `protobuf_oneof:"payment"`
}

func (x *CreateEnvironmentResponse) Reset() {
	*x = CreateEnvironmentResponse{}
	mi := &file_svc_organization_v1_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEnvironmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEnvironmentResponse) ProtoMessage() {}

func (x *CreateEnvironmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_organization_v1_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEnvironmentResponse.ProtoReflect.Descriptor instead.
func (*CreateEnvironmentResponse) Descriptor() ([]byte, []int) {
	return file_svc_organization_v1_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateEnvironmentResponse) GetEnvironment() *v1.Environment {
	if x != nil {
		return x.Environment
	}
	return nil
}

func (m *CreateEnvironmentResponse) GetPayment() isCreateEnvironmentResponse_Payment {
	if m != nil {
		return m.Payment
	}
	return nil
}

func (x *CreateEnvironmentResponse) GetStripe() *CreateEnvironmentResponse_Stripe {
	if x, ok := x.GetPayment().(*CreateEnvironmentResponse_Stripe_); ok {
		return x.Stripe
	}
	return nil
}

type isCreateEnvironmentResponse_Payment interface {
	isCreateEnvironmentResponse_Payment()
}

type CreateEnvironmentResponse_Stripe_ struct {
	Stripe *CreateEnvironmentResponse_Stripe `protobuf:"bytes,201,opt,name=stripe,proto3,oneof"`
}

func (*CreateEnvironmentResponse_Stripe_) isCreateEnvironmentResponse_Payment() {}

type ListEnvironmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cursor *v1.Cursor `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Limit  int32      `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ListEnvironmentRequest) Reset() {
	*x = ListEnvironmentRequest{}
	mi := &file_svc_organization_v1_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEnvironmentRequest) ProtoMessage() {}

func (x *ListEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_organization_v1_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEnvironmentRequest.ProtoReflect.Descriptor instead.
func (*ListEnvironmentRequest) Descriptor() ([]byte, []int) {
	return file_svc_organization_v1_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListEnvironmentRequest) GetCursor() *v1.Cursor {
	if x != nil {
		return x.Cursor
	}
	return nil
}

func (x *ListEnvironmentRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListEnvironmentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Next  *v1.Cursor                          `protobuf:"bytes,1,opt,name=next,proto3" json:"next,omitempty"`
	Items []*ListEnvironmentResponse_ListItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListEnvironmentResponse) Reset() {
	*x = ListEnvironmentResponse{}
	mi := &file_svc_organization_v1_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEnvironmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEnvironmentResponse) ProtoMessage() {}

func (x *ListEnvironmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_organization_v1_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEnvironmentResponse.ProtoReflect.Descriptor instead.
func (*ListEnvironmentResponse) Descriptor() ([]byte, []int) {
	return file_svc_organization_v1_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListEnvironmentResponse) GetNext() *v1.Cursor {
	if x != nil {
		return x.Next
	}
	return nil
}

func (x *ListEnvironmentResponse) GetItems() []*ListEnvironmentResponse_ListItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type ListUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cursor *v1.Cursor `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Limit  int32      `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ListUserRequest) Reset() {
	*x = ListUserRequest{}
	mi := &file_svc_organization_v1_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserRequest) ProtoMessage() {}

func (x *ListUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_organization_v1_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserRequest.ProtoReflect.Descriptor instead.
func (*ListUserRequest) Descriptor() ([]byte, []int) {
	return file_svc_organization_v1_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListUserRequest) GetCursor() *v1.Cursor {
	if x != nil {
		return x.Cursor
	}
	return nil
}

func (x *ListUserRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Next  *v1.Cursor                   `protobuf:"bytes,1,opt,name=next,proto3" json:"next,omitempty"`
	Items []*ListUserResponse_ListItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListUserResponse) Reset() {
	*x = ListUserResponse{}
	mi := &file_svc_organization_v1_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserResponse) ProtoMessage() {}

func (x *ListUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_organization_v1_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserResponse.ProtoReflect.Descriptor instead.
func (*ListUserResponse) Descriptor() ([]byte, []int) {
	return file_svc_organization_v1_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListUserResponse) GetNext() *v1.Cursor {
	if x != nil {
		return x.Next
	}
	return nil
}

func (x *ListUserResponse) GetItems() []*ListUserResponse_ListItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type InviteUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserEmail int64 `protobuf:"varint,1,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
}

func (x *InviteUserRequest) Reset() {
	*x = InviteUserRequest{}
	mi := &file_svc_organization_v1_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InviteUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteUserRequest) ProtoMessage() {}

func (x *InviteUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_organization_v1_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteUserRequest.ProtoReflect.Descriptor instead.
func (*InviteUserRequest) Descriptor() ([]byte, []int) {
	return file_svc_organization_v1_service_proto_rawDescGZIP(), []int{6}
}

func (x *InviteUserRequest) GetUserEmail() int64 {
	if x != nil {
		return x.UserEmail
	}
	return 0
}

type InviteUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InviteUserResponse) Reset() {
	*x = InviteUserResponse{}
	mi := &file_svc_organization_v1_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InviteUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteUserResponse) ProtoMessage() {}

func (x *InviteUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_organization_v1_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteUserResponse.ProtoReflect.Descriptor instead.
func (*InviteUserResponse) Descriptor() ([]byte, []int) {
	return file_svc_organization_v1_service_proto_rawDescGZIP(), []int{7}
}

type RevokeUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *RevokeUserRequest) Reset() {
	*x = RevokeUserRequest{}
	mi := &file_svc_organization_v1_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeUserRequest) ProtoMessage() {}

func (x *RevokeUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_organization_v1_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeUserRequest.ProtoReflect.Descriptor instead.
func (*RevokeUserRequest) Descriptor() ([]byte, []int) {
	return file_svc_organization_v1_service_proto_rawDescGZIP(), []int{8}
}

func (x *RevokeUserRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type RevokeUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RevokeUserResponse) Reset() {
	*x = RevokeUserResponse{}
	mi := &file_svc_organization_v1_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeUserResponse) ProtoMessage() {}

func (x *RevokeUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_organization_v1_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeUserResponse.ProtoReflect.Descriptor instead.
func (*RevokeUserResponse) Descriptor() ([]byte, []int) {
	return file_svc_organization_v1_service_proto_rawDescGZIP(), []int{9}
}

type CreateAddonSubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnvironmentName string `protobuf:"bytes,1,opt,name=environment_name,json=environmentName,proto3" json:"environment_name,omitempty"`
	// Types that are assignable to Payment:
	//
	//	*CreateAddonSubscriptionRequest_Stripe_
	Payment isCreateAddonSubscriptionRequest_Payment `protobuf_oneof:"payment"`
}

func (x *CreateAddonSubscriptionRequest) Reset() {
	*x = CreateAddonSubscriptionRequest{}
	mi := &file_svc_organization_v1_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAddonSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAddonSubscriptionRequest) ProtoMessage() {}

func (x *CreateAddonSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_organization_v1_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAddonSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*CreateAddonSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_svc_organization_v1_service_proto_rawDescGZIP(), []int{10}
}

func (x *CreateAddonSubscriptionRequest) GetEnvironmentName() string {
	if x != nil {
		return x.EnvironmentName
	}
	return ""
}

func (m *CreateAddonSubscriptionRequest) GetPayment() isCreateAddonSubscriptionRequest_Payment {
	if m != nil {
		return m.Payment
	}
	return nil
}

func (x *CreateAddonSubscriptionRequest) GetStripe() *CreateAddonSubscriptionRequest_Stripe {
	if x, ok := x.GetPayment().(*CreateAddonSubscriptionRequest_Stripe_); ok {
		return x.Stripe
	}
	return nil
}

type isCreateAddonSubscriptionRequest_Payment interface {
	isCreateAddonSubscriptionRequest_Payment()
}

type CreateAddonSubscriptionRequest_Stripe_ struct {
	Stripe *CreateAddonSubscriptionRequest_Stripe `protobuf:"bytes,201,opt,name=stripe,proto3,oneof"`
}

func (*CreateAddonSubscriptionRequest_Stripe_) isCreateAddonSubscriptionRequest_Payment() {}

type CreateAddonSubscriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payment:
	//
	//	*CreateAddonSubscriptionResponse_Stripe_
	Payment isCreateAddonSubscriptionResponse_Payment `protobuf_oneof:"payment"`
}

func (x *CreateAddonSubscriptionResponse) Reset() {
	*x = CreateAddonSubscriptionResponse{}
	mi := &file_svc_organization_v1_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAddonSubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAddonSubscriptionResponse) ProtoMessage() {}

func (x *CreateAddonSubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_organization_v1_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAddonSubscriptionResponse.ProtoReflect.Descriptor instead.
func (*CreateAddonSubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_svc_organization_v1_service_proto_rawDescGZIP(), []int{11}
}

func (m *CreateAddonSubscriptionResponse) GetPayment() isCreateAddonSubscriptionResponse_Payment {
	if m != nil {
		return m.Payment
	}
	return nil
}

func (x *CreateAddonSubscriptionResponse) GetStripe() *CreateAddonSubscriptionResponse_Stripe {
	if x, ok := x.GetPayment().(*CreateAddonSubscriptionResponse_Stripe_); ok {
		return x.Stripe
	}
	return nil
}

type isCreateAddonSubscriptionResponse_Payment interface {
	isCreateAddonSubscriptionResponse_Payment()
}

type CreateAddonSubscriptionResponse_Stripe_ struct {
	Stripe *CreateAddonSubscriptionResponse_Stripe `protobuf:"bytes,201,opt,name=stripe,proto3,oneof"`
}

func (*CreateAddonSubscriptionResponse_Stripe_) isCreateAddonSubscriptionResponse_Payment() {}

type ListAddonSubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cursor *v1.Cursor `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Limit  int32      `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ListAddonSubscriptionRequest) Reset() {
	*x = ListAddonSubscriptionRequest{}
	mi := &file_svc_organization_v1_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAddonSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAddonSubscriptionRequest) ProtoMessage() {}

func (x *ListAddonSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_organization_v1_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAddonSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*ListAddonSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_svc_organization_v1_service_proto_rawDescGZIP(), []int{12}
}

func (x *ListAddonSubscriptionRequest) GetCursor() *v1.Cursor {
	if x != nil {
		return x.Cursor
	}
	return nil
}

func (x *ListAddonSubscriptionRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListAddonSubscriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Next  *v1.Cursor                                `protobuf:"bytes,1,opt,name=next,proto3" json:"next,omitempty"`
	Items []*ListAddonSubscriptionResponse_ListItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListAddonSubscriptionResponse) Reset() {
	*x = ListAddonSubscriptionResponse{}
	mi := &file_svc_organization_v1_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAddonSubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAddonSubscriptionResponse) ProtoMessage() {}

func (x *ListAddonSubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_organization_v1_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAddonSubscriptionResponse.ProtoReflect.Descriptor instead.
func (*ListAddonSubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_svc_organization_v1_service_proto_rawDescGZIP(), []int{13}
}

func (x *ListAddonSubscriptionResponse) GetNext() *v1.Cursor {
	if x != nil {
		return x.Next
	}
	return nil
}

func (x *ListAddonSubscriptionResponse) GetItems() []*ListAddonSubscriptionResponse_ListItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetStripePublishableKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetStripePublishableKeyRequest) Reset() {
	*x = GetStripePublishableKeyRequest{}
	mi := &file_svc_organization_v1_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStripePublishableKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStripePublishableKeyRequest) ProtoMessage() {}

func (x *GetStripePublishableKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_organization_v1_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStripePublishableKeyRequest.ProtoReflect.Descriptor instead.
func (*GetStripePublishableKeyRequest) Descriptor() ([]byte, []int) {
	return file_svc_organization_v1_service_proto_rawDescGZIP(), []int{14}
}

type GetStripePublishableKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StripePublishableKey string `protobuf:"bytes,2,opt,name=stripe_publishable_key,json=stripePublishableKey,proto3" json:"stripe_publishable_key,omitempty"`
}

func (x *GetStripePublishableKeyResponse) Reset() {
	*x = GetStripePublishableKeyResponse{}
	mi := &file_svc_organization_v1_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStripePublishableKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStripePublishableKeyResponse) ProtoMessage() {}

func (x *GetStripePublishableKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_organization_v1_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStripePublishableKeyResponse.ProtoReflect.Descriptor instead.
func (*GetStripePublishableKeyResponse) Descriptor() ([]byte, []int) {
	return file_svc_organization_v1_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetStripePublishableKeyResponse) GetStripePublishableKey() string {
	if x != nil {
		return x.StripePublishableKey
	}
	return ""
}

type CreateStripeCustomerSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateStripeCustomerSessionRequest) Reset() {
	*x = CreateStripeCustomerSessionRequest{}
	mi := &file_svc_organization_v1_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateStripeCustomerSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStripeCustomerSessionRequest) ProtoMessage() {}

func (x *CreateStripeCustomerSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_organization_v1_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStripeCustomerSessionRequest.ProtoReflect.Descriptor instead.
func (*CreateStripeCustomerSessionRequest) Descriptor() ([]byte, []int) {
	return file_svc_organization_v1_service_proto_rawDescGZIP(), []int{16}
}

type CreateStripeCustomerSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerSessionClientSecret string `protobuf:"bytes,1,opt,name=customer_session_client_secret,json=customerSessionClientSecret,proto3" json:"customer_session_client_secret,omitempty"`
}

func (x *CreateStripeCustomerSessionResponse) Reset() {
	*x = CreateStripeCustomerSessionResponse{}
	mi := &file_svc_organization_v1_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateStripeCustomerSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStripeCustomerSessionResponse) ProtoMessage() {}

func (x *CreateStripeCustomerSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_organization_v1_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStripeCustomerSessionResponse.ProtoReflect.Descriptor instead.
func (*CreateStripeCustomerSessionResponse) Descriptor() ([]byte, []int) {
	return file_svc_organization_v1_service_proto_rawDescGZIP(), []int{17}
}

func (x *CreateStripeCustomerSessionResponse) GetCustomerSessionClientSecret() string {
	if x != nil {
		return x.CustomerSessionClientSecret
	}
	return ""
}

type ListPaymentMethodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cursor *v1.Cursor `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Limit  int32      `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ListPaymentMethodRequest) Reset() {
	*x = ListPaymentMethodRequest{}
	mi := &file_svc_organization_v1_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPaymentMethodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPaymentMethodRequest) ProtoMessage() {}

func (x *ListPaymentMethodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_organization_v1_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPaymentMethodRequest.ProtoReflect.Descriptor instead.
func (*ListPaymentMethodRequest) Descriptor() ([]byte, []int) {
	return file_svc_organization_v1_service_proto_rawDescGZIP(), []int{18}
}

func (x *ListPaymentMethodRequest) GetCursor() *v1.Cursor {
	if x != nil {
		return x.Cursor
	}
	return nil
}

func (x *ListPaymentMethodRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListPaymentMethodResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Next  *v1.Cursor                            `protobuf:"bytes,1,opt,name=next,proto3" json:"next,omitempty"`
	Items []*ListPaymentMethodResponse_ListItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListPaymentMethodResponse) Reset() {
	*x = ListPaymentMethodResponse{}
	mi := &file_svc_organization_v1_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPaymentMethodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPaymentMethodResponse) ProtoMessage() {}

func (x *ListPaymentMethodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_organization_v1_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPaymentMethodResponse.ProtoReflect.Descriptor instead.
func (*ListPaymentMethodResponse) Descriptor() ([]byte, []int) {
	return file_svc_organization_v1_service_proto_rawDescGZIP(), []int{19}
}

func (x *ListPaymentMethodResponse) GetNext() *v1.Cursor {
	if x != nil {
		return x.Next
	}
	return nil
}

func (x *ListPaymentMethodResponse) GetItems() []*ListPaymentMethodResponse_ListItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type CreateEnvironmentRequest_Stripe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfirmationToken string `protobuf:"bytes,1,opt,name=confirmation_token,json=confirmationToken,proto3" json:"confirmation_token,omitempty"`
	PriceId           string `protobuf:"bytes,2,opt,name=price_id,json=priceId,proto3" json:"price_id,omitempty"`
}

func (x *CreateEnvironmentRequest_Stripe) Reset() {
	*x = CreateEnvironmentRequest_Stripe{}
	mi := &file_svc_organization_v1_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEnvironmentRequest_Stripe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEnvironmentRequest_Stripe) ProtoMessage() {}

func (x *CreateEnvironmentRequest_Stripe) ProtoReflect() protoreflect.Message {
	mi := &file_svc_organization_v1_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEnvironmentRequest_Stripe.ProtoReflect.Descriptor instead.
func (*CreateEnvironmentRequest_Stripe) Descriptor() ([]byte, []int) {
	return file_svc_organization_v1_service_proto_rawDescGZIP(), []int{0, 0}
}

func (x *CreateEnvironmentRequest_Stripe) GetConfirmationToken() string {
	if x != nil {
		return x.ConfirmationToken
	}
	return ""
}

func (x *CreateEnvironmentRequest_Stripe) GetPriceId() string {
	if x != nil {
		return x.PriceId
	}
	return ""
}

type CreateEnvironmentResponse_Stripe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status       string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	ClientSecret string `protobuf:"bytes,2,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
}

func (x *CreateEnvironmentResponse_Stripe) Reset() {
	*x = CreateEnvironmentResponse_Stripe{}
	mi := &file_svc_organization_v1_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEnvironmentResponse_Stripe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEnvironmentResponse_Stripe) ProtoMessage() {}

func (x *CreateEnvironmentResponse_Stripe) ProtoReflect() protoreflect.Message {
	mi := &file_svc_organization_v1_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEnvironmentResponse_Stripe.ProtoReflect.Descriptor instead.
func (*CreateEnvironmentResponse_Stripe) Descriptor() ([]byte, []int) {
	return file_svc_organization_v1_service_proto_rawDescGZIP(), []int{1, 0}
}

func (x *CreateEnvironmentResponse_Stripe) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateEnvironmentResponse_Stripe) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

type ListEnvironmentResponse_ListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Environment *v1.Environment `protobuf:"bytes,1,opt,name=environment,proto3" json:"environment,omitempty"`
	Product     *v1.Product     `protobuf:"bytes,2,opt,name=product,proto3" json:"product,omitempty"`
}

func (x *ListEnvironmentResponse_ListItem) Reset() {
	*x = ListEnvironmentResponse_ListItem{}
	mi := &file_svc_organization_v1_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEnvironmentResponse_ListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEnvironmentResponse_ListItem) ProtoMessage() {}

func (x *ListEnvironmentResponse_ListItem) ProtoReflect() protoreflect.Message {
	mi := &file_svc_organization_v1_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEnvironmentResponse_ListItem.ProtoReflect.Descriptor instead.
func (*ListEnvironmentResponse_ListItem) Descriptor() ([]byte, []int) {
	return file_svc_organization_v1_service_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ListEnvironmentResponse_ListItem) GetEnvironment() *v1.Environment {
	if x != nil {
		return x.Environment
	}
	return nil
}

func (x *ListEnvironmentResponse_ListItem) GetProduct() *v1.Product {
	if x != nil {
		return x.Product
	}
	return nil
}

type ListUserResponse_ListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *v1.User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *ListUserResponse_ListItem) Reset() {
	*x = ListUserResponse_ListItem{}
	mi := &file_svc_organization_v1_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserResponse_ListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserResponse_ListItem) ProtoMessage() {}

func (x *ListUserResponse_ListItem) ProtoReflect() protoreflect.Message {
	mi := &file_svc_organization_v1_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserResponse_ListItem.ProtoReflect.Descriptor instead.
func (*ListUserResponse_ListItem) Descriptor() ([]byte, []int) {
	return file_svc_organization_v1_service_proto_rawDescGZIP(), []int{5, 0}
}

func (x *ListUserResponse_ListItem) GetUser() *v1.User {
	if x != nil {
		return x.User
	}
	return nil
}

type CreateAddonSubscriptionRequest_Stripe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfirmationToken string `protobuf:"bytes,1,opt,name=confirmation_token,json=confirmationToken,proto3" json:"confirmation_token,omitempty"`
	ProductId         string `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	PriceId           string `protobuf:"bytes,3,opt,name=price_id,json=priceId,proto3" json:"price_id,omitempty"`
}

func (x *CreateAddonSubscriptionRequest_Stripe) Reset() {
	*x = CreateAddonSubscriptionRequest_Stripe{}
	mi := &file_svc_organization_v1_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAddonSubscriptionRequest_Stripe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAddonSubscriptionRequest_Stripe) ProtoMessage() {}

func (x *CreateAddonSubscriptionRequest_Stripe) ProtoReflect() protoreflect.Message {
	mi := &file_svc_organization_v1_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAddonSubscriptionRequest_Stripe.ProtoReflect.Descriptor instead.
func (*CreateAddonSubscriptionRequest_Stripe) Descriptor() ([]byte, []int) {
	return file_svc_organization_v1_service_proto_rawDescGZIP(), []int{10, 0}
}

func (x *CreateAddonSubscriptionRequest_Stripe) GetConfirmationToken() string {
	if x != nil {
		return x.ConfirmationToken
	}
	return ""
}

func (x *CreateAddonSubscriptionRequest_Stripe) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *CreateAddonSubscriptionRequest_Stripe) GetPriceId() string {
	if x != nil {
		return x.PriceId
	}
	return ""
}

type CreateAddonSubscriptionResponse_Stripe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status       string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	ClientSecret string `protobuf:"bytes,2,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
}

func (x *CreateAddonSubscriptionResponse_Stripe) Reset() {
	*x = CreateAddonSubscriptionResponse_Stripe{}
	mi := &file_svc_organization_v1_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAddonSubscriptionResponse_Stripe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAddonSubscriptionResponse_Stripe) ProtoMessage() {}

func (x *CreateAddonSubscriptionResponse_Stripe) ProtoReflect() protoreflect.Message {
	mi := &file_svc_organization_v1_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAddonSubscriptionResponse_Stripe.ProtoReflect.Descriptor instead.
func (*CreateAddonSubscriptionResponse_Stripe) Descriptor() ([]byte, []int) {
	return file_svc_organization_v1_service_proto_rawDescGZIP(), []int{11, 0}
}

func (x *CreateAddonSubscriptionResponse_Stripe) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateAddonSubscriptionResponse_Stripe) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

type ListAddonSubscriptionResponse_ListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Product *v1.Product `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
}

func (x *ListAddonSubscriptionResponse_ListItem) Reset() {
	*x = ListAddonSubscriptionResponse_ListItem{}
	mi := &file_svc_organization_v1_service_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAddonSubscriptionResponse_ListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAddonSubscriptionResponse_ListItem) ProtoMessage() {}

func (x *ListAddonSubscriptionResponse_ListItem) ProtoReflect() protoreflect.Message {
	mi := &file_svc_organization_v1_service_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAddonSubscriptionResponse_ListItem.ProtoReflect.Descriptor instead.
func (*ListAddonSubscriptionResponse_ListItem) Descriptor() ([]byte, []int) {
	return file_svc_organization_v1_service_proto_rawDescGZIP(), []int{13, 0}
}

func (x *ListAddonSubscriptionResponse_ListItem) GetProduct() *v1.Product {
	if x != nil {
		return x.Product
	}
	return nil
}

type ListPaymentMethodResponse_ListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentMethod *v1.PaymentMethod `protobuf:"bytes,1,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method,omitempty"`
}

func (x *ListPaymentMethodResponse_ListItem) Reset() {
	*x = ListPaymentMethodResponse_ListItem{}
	mi := &file_svc_organization_v1_service_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPaymentMethodResponse_ListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPaymentMethodResponse_ListItem) ProtoMessage() {}

func (x *ListPaymentMethodResponse_ListItem) ProtoReflect() protoreflect.Message {
	mi := &file_svc_organization_v1_service_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPaymentMethodResponse_ListItem.ProtoReflect.Descriptor instead.
func (*ListPaymentMethodResponse_ListItem) Descriptor() ([]byte, []int) {
	return file_svc_organization_v1_service_proto_rawDescGZIP(), []int{19, 0}
}

func (x *ListPaymentMethodResponse_ListItem) GetPaymentMethod() *v1.PaymentMethod {
	if x != nil {
		return x.PaymentMethod
	}
	return nil
}

var File_svc_organization_v1_service_proto protoreflect.FileDescriptor

var file_svc_organization_v1_service_proto_rawDesc = []byte{
	0x0a, 0x21, 0x73, 0x76, 0x63, 0x2f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x13, 0x73, 0x76, 0x63, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x15, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1a, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x13, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf5, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4f, 0x0a, 0x06,
	0x73, 0x74, 0x72, 0x69, 0x70, 0x65, 0x18, 0xc9, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e,
	0x73, 0x76, 0x63, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x70, 0x65, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x70, 0x65, 0x1a, 0x52, 0x0a,
	0x06, 0x53, 0x74, 0x72, 0x69, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xf8, 0x01, 0x0a,
	0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x50, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x70, 0x65, 0x18, 0xc9, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x70, 0x65, 0x48, 0x00, 0x52, 0x06, 0x73,
	0x74, 0x72, 0x69, 0x70, 0x65, 0x1a, 0x45, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x69, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x42, 0x09, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x58, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x28, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0xfe, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a,
	0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x04, 0x6e,
	0x65, 0x78, 0x74, 0x12, 0x4b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x35, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x1a, 0x70, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x37, 0x0a, 0x0b,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x22, 0x51, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xae, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x6e, 0x65,
	0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74,
	0x12, 0x44, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x2e, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x22, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x32, 0x0a, 0x11, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x14, 0x0a, 0x12, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x2c, 0x0a, 0x11, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x14,
	0x0a, 0x12, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa0, 0x02, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x64, 0x64, 0x6f, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x55, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x70, 0x65, 0x18, 0xc9, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x64, 0x64, 0x6f, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x70, 0x65, 0x48,
	0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x70, 0x65, 0x1a, 0x71, 0x0a, 0x06, 0x53, 0x74, 0x72,
	0x69, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x69, 0x63, 0x65, 0x49, 0x64, 0x42, 0x09, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xcb, 0x01, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x06, 0x73,
	0x74, 0x72, 0x69, 0x70, 0x65, 0x18, 0xc9, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x73,
	0x76, 0x63, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x70, 0x65, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x72,
	0x69, 0x70, 0x65, 0x1a, 0x45, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x69, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x5e, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x64,
	0x6f, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xd1, 0x01, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64,
	0x64, 0x6f, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x51, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x73,
	0x76, 0x63, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x1a, 0x37, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2b, 0x0a, 0x07,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0x20, 0x0a, 0x1e, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x72, 0x69, 0x70, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x61, 0x62, 0x6c,
	0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x57, 0x0a, 0x1f, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x72, 0x69, 0x70, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x61,
	0x62, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34,
	0x0a, 0x16, 0x73, 0x74, 0x72, 0x69, 0x70, 0x65, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14,
	0x73, 0x74, 0x72, 0x69, 0x70, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x61, 0x62, 0x6c,
	0x65, 0x4b, 0x65, 0x79, 0x22, 0x24, 0x0a, 0x22, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x72, 0x69, 0x70, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6a, 0x0a, 0x23, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x69, 0x70, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x43, 0x0a, 0x1e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x5a, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x28, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75,
	0x72, 0x73, 0x6f, 0x72, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x22, 0xdc, 0x01, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x24, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x4d, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x4a, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x3e, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x32, 0xb8, 0x09, 0x0a, 0x13, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x74, 0x0a, 0x11, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2d,
	0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e,
	0x73, 0x76, 0x63, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x6e, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x2b, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2c, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x59, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x73, 0x76,
	0x63, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x0a, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x26, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x27, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x0a, 0x52,
	0x65, 0x76, 0x6f, 0x6b, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x26, 0x2e, 0x73, 0x76, 0x63, 0x2e,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x86, 0x01, 0x0a,
	0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e,
	0x73, 0x76, 0x63, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x80, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64,
	0x64, 0x6f, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x31, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x32, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x64,
	0x6f, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x86, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x72, 0x69, 0x70, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x61, 0x62, 0x6c,
	0x65, 0x4b, 0x65, 0x79, 0x12, 0x33, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x72, 0x69, 0x70, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x4b,
	0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x73, 0x76, 0x63, 0x2e,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x69, 0x70, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x61, 0x62, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x92, 0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x69,
	0x70, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x37, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x72, 0x69, 0x70, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x73, 0x76, 0x63,
	0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x69, 0x70, 0x65, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x74, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x2d, 0x2e, 0x73, 0x76,
	0x63, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x73, 0x76, 0x63,
	0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0xd6, 0x01, 0x0a,
	0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6c, 0x6f, 0x67, 0x69, 0x6f, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x76, 0x63, 0x2f, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x53, 0x4f, 0x58, 0xaa,
	0x02, 0x13, 0x53, 0x76, 0x63, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x13, 0x53, 0x76, 0x63, 0x5c, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1f, 0x53, 0x76,
	0x63, 0x5c, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5c, 0x56,
	0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x15,
	0x53, 0x76, 0x63, 0x3a, 0x3a, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_svc_organization_v1_service_proto_rawDescOnce sync.Once
	file_svc_organization_v1_service_proto_rawDescData = file_svc_organization_v1_service_proto_rawDesc
)

func file_svc_organization_v1_service_proto_rawDescGZIP() []byte {
	file_svc_organization_v1_service_proto_rawDescOnce.Do(func() {
		file_svc_organization_v1_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_svc_organization_v1_service_proto_rawDescData)
	})
	return file_svc_organization_v1_service_proto_rawDescData
}

var file_svc_organization_v1_service_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_svc_organization_v1_service_proto_goTypes = []any{
	(*CreateEnvironmentRequest)(nil),               // 0: svc.organization.v1.CreateEnvironmentRequest
	(*CreateEnvironmentResponse)(nil),              // 1: svc.organization.v1.CreateEnvironmentResponse
	(*ListEnvironmentRequest)(nil),                 // 2: svc.organization.v1.ListEnvironmentRequest
	(*ListEnvironmentResponse)(nil),                // 3: svc.organization.v1.ListEnvironmentResponse
	(*ListUserRequest)(nil),                        // 4: svc.organization.v1.ListUserRequest
	(*ListUserResponse)(nil),                       // 5: svc.organization.v1.ListUserResponse
	(*InviteUserRequest)(nil),                      // 6: svc.organization.v1.InviteUserRequest
	(*InviteUserResponse)(nil),                     // 7: svc.organization.v1.InviteUserResponse
	(*RevokeUserRequest)(nil),                      // 8: svc.organization.v1.RevokeUserRequest
	(*RevokeUserResponse)(nil),                     // 9: svc.organization.v1.RevokeUserResponse
	(*CreateAddonSubscriptionRequest)(nil),         // 10: svc.organization.v1.CreateAddonSubscriptionRequest
	(*CreateAddonSubscriptionResponse)(nil),        // 11: svc.organization.v1.CreateAddonSubscriptionResponse
	(*ListAddonSubscriptionRequest)(nil),           // 12: svc.organization.v1.ListAddonSubscriptionRequest
	(*ListAddonSubscriptionResponse)(nil),          // 13: svc.organization.v1.ListAddonSubscriptionResponse
	(*GetStripePublishableKeyRequest)(nil),         // 14: svc.organization.v1.GetStripePublishableKeyRequest
	(*GetStripePublishableKeyResponse)(nil),        // 15: svc.organization.v1.GetStripePublishableKeyResponse
	(*CreateStripeCustomerSessionRequest)(nil),     // 16: svc.organization.v1.CreateStripeCustomerSessionRequest
	(*CreateStripeCustomerSessionResponse)(nil),    // 17: svc.organization.v1.CreateStripeCustomerSessionResponse
	(*ListPaymentMethodRequest)(nil),               // 18: svc.organization.v1.ListPaymentMethodRequest
	(*ListPaymentMethodResponse)(nil),              // 19: svc.organization.v1.ListPaymentMethodResponse
	(*CreateEnvironmentRequest_Stripe)(nil),        // 20: svc.organization.v1.CreateEnvironmentRequest.Stripe
	(*CreateEnvironmentResponse_Stripe)(nil),       // 21: svc.organization.v1.CreateEnvironmentResponse.Stripe
	(*ListEnvironmentResponse_ListItem)(nil),       // 22: svc.organization.v1.ListEnvironmentResponse.ListItem
	(*ListUserResponse_ListItem)(nil),              // 23: svc.organization.v1.ListUserResponse.ListItem
	(*CreateAddonSubscriptionRequest_Stripe)(nil),  // 24: svc.organization.v1.CreateAddonSubscriptionRequest.Stripe
	(*CreateAddonSubscriptionResponse_Stripe)(nil), // 25: svc.organization.v1.CreateAddonSubscriptionResponse.Stripe
	(*ListAddonSubscriptionResponse_ListItem)(nil), // 26: svc.organization.v1.ListAddonSubscriptionResponse.ListItem
	(*ListPaymentMethodResponse_ListItem)(nil),     // 27: svc.organization.v1.ListPaymentMethodResponse.ListItem
	(*v1.Environment)(nil),                         // 28: types.v1.Environment
	(*v1.Cursor)(nil),                              // 29: types.v1.Cursor
	(*v1.Product)(nil),                             // 30: types.v1.Product
	(*v1.User)(nil),                                // 31: types.v1.User
	(*v1.PaymentMethod)(nil),                       // 32: types.v1.PaymentMethod
}
var file_svc_organization_v1_service_proto_depIdxs = []int32{
	20, // 0: svc.organization.v1.CreateEnvironmentRequest.stripe:type_name -> svc.organization.v1.CreateEnvironmentRequest.Stripe
	28, // 1: svc.organization.v1.CreateEnvironmentResponse.environment:type_name -> types.v1.Environment
	21, // 2: svc.organization.v1.CreateEnvironmentResponse.stripe:type_name -> svc.organization.v1.CreateEnvironmentResponse.Stripe
	29, // 3: svc.organization.v1.ListEnvironmentRequest.cursor:type_name -> types.v1.Cursor
	29, // 4: svc.organization.v1.ListEnvironmentResponse.next:type_name -> types.v1.Cursor
	22, // 5: svc.organization.v1.ListEnvironmentResponse.items:type_name -> svc.organization.v1.ListEnvironmentResponse.ListItem
	29, // 6: svc.organization.v1.ListUserRequest.cursor:type_name -> types.v1.Cursor
	29, // 7: svc.organization.v1.ListUserResponse.next:type_name -> types.v1.Cursor
	23, // 8: svc.organization.v1.ListUserResponse.items:type_name -> svc.organization.v1.ListUserResponse.ListItem
	24, // 9: svc.organization.v1.CreateAddonSubscriptionRequest.stripe:type_name -> svc.organization.v1.CreateAddonSubscriptionRequest.Stripe
	25, // 10: svc.organization.v1.CreateAddonSubscriptionResponse.stripe:type_name -> svc.organization.v1.CreateAddonSubscriptionResponse.Stripe
	29, // 11: svc.organization.v1.ListAddonSubscriptionRequest.cursor:type_name -> types.v1.Cursor
	29, // 12: svc.organization.v1.ListAddonSubscriptionResponse.next:type_name -> types.v1.Cursor
	26, // 13: svc.organization.v1.ListAddonSubscriptionResponse.items:type_name -> svc.organization.v1.ListAddonSubscriptionResponse.ListItem
	29, // 14: svc.organization.v1.ListPaymentMethodRequest.cursor:type_name -> types.v1.Cursor
	29, // 15: svc.organization.v1.ListPaymentMethodResponse.next:type_name -> types.v1.Cursor
	27, // 16: svc.organization.v1.ListPaymentMethodResponse.items:type_name -> svc.organization.v1.ListPaymentMethodResponse.ListItem
	28, // 17: svc.organization.v1.ListEnvironmentResponse.ListItem.environment:type_name -> types.v1.Environment
	30, // 18: svc.organization.v1.ListEnvironmentResponse.ListItem.product:type_name -> types.v1.Product
	31, // 19: svc.organization.v1.ListUserResponse.ListItem.user:type_name -> types.v1.User
	30, // 20: svc.organization.v1.ListAddonSubscriptionResponse.ListItem.product:type_name -> types.v1.Product
	32, // 21: svc.organization.v1.ListPaymentMethodResponse.ListItem.payment_method:type_name -> types.v1.PaymentMethod
	0,  // 22: svc.organization.v1.OrganizationService.CreateEnvironment:input_type -> svc.organization.v1.CreateEnvironmentRequest
	2,  // 23: svc.organization.v1.OrganizationService.ListEnvironment:input_type -> svc.organization.v1.ListEnvironmentRequest
	4,  // 24: svc.organization.v1.OrganizationService.ListUser:input_type -> svc.organization.v1.ListUserRequest
	6,  // 25: svc.organization.v1.OrganizationService.InviteUser:input_type -> svc.organization.v1.InviteUserRequest
	8,  // 26: svc.organization.v1.OrganizationService.RevokeUser:input_type -> svc.organization.v1.RevokeUserRequest
	10, // 27: svc.organization.v1.OrganizationService.CreateAddonSubscription:input_type -> svc.organization.v1.CreateAddonSubscriptionRequest
	12, // 28: svc.organization.v1.OrganizationService.ListAddonSubscription:input_type -> svc.organization.v1.ListAddonSubscriptionRequest
	14, // 29: svc.organization.v1.OrganizationService.GetStripePublishableKey:input_type -> svc.organization.v1.GetStripePublishableKeyRequest
	16, // 30: svc.organization.v1.OrganizationService.CreateStripeCustomerSession:input_type -> svc.organization.v1.CreateStripeCustomerSessionRequest
	18, // 31: svc.organization.v1.OrganizationService.ListPaymentMethod:input_type -> svc.organization.v1.ListPaymentMethodRequest
	1,  // 32: svc.organization.v1.OrganizationService.CreateEnvironment:output_type -> svc.organization.v1.CreateEnvironmentResponse
	3,  // 33: svc.organization.v1.OrganizationService.ListEnvironment:output_type -> svc.organization.v1.ListEnvironmentResponse
	5,  // 34: svc.organization.v1.OrganizationService.ListUser:output_type -> svc.organization.v1.ListUserResponse
	7,  // 35: svc.organization.v1.OrganizationService.InviteUser:output_type -> svc.organization.v1.InviteUserResponse
	9,  // 36: svc.organization.v1.OrganizationService.RevokeUser:output_type -> svc.organization.v1.RevokeUserResponse
	11, // 37: svc.organization.v1.OrganizationService.CreateAddonSubscription:output_type -> svc.organization.v1.CreateAddonSubscriptionResponse
	13, // 38: svc.organization.v1.OrganizationService.ListAddonSubscription:output_type -> svc.organization.v1.ListAddonSubscriptionResponse
	15, // 39: svc.organization.v1.OrganizationService.GetStripePublishableKey:output_type -> svc.organization.v1.GetStripePublishableKeyResponse
	17, // 40: svc.organization.v1.OrganizationService.CreateStripeCustomerSession:output_type -> svc.organization.v1.CreateStripeCustomerSessionResponse
	19, // 41: svc.organization.v1.OrganizationService.ListPaymentMethod:output_type -> svc.organization.v1.ListPaymentMethodResponse
	32, // [32:42] is the sub-list for method output_type
	22, // [22:32] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_svc_organization_v1_service_proto_init() }
func file_svc_organization_v1_service_proto_init() {
	if File_svc_organization_v1_service_proto != nil {
		return
	}
	file_svc_organization_v1_service_proto_msgTypes[0].OneofWrappers = []any{
		(*CreateEnvironmentRequest_Stripe_)(nil),
	}
	file_svc_organization_v1_service_proto_msgTypes[1].OneofWrappers = []any{
		(*CreateEnvironmentResponse_Stripe_)(nil),
	}
	file_svc_organization_v1_service_proto_msgTypes[10].OneofWrappers = []any{
		(*CreateAddonSubscriptionRequest_Stripe_)(nil),
	}
	file_svc_organization_v1_service_proto_msgTypes[11].OneofWrappers = []any{
		(*CreateAddonSubscriptionResponse_Stripe_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_svc_organization_v1_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_svc_organization_v1_service_proto_goTypes,
		DependencyIndexes: file_svc_organization_v1_service_proto_depIdxs,
		MessageInfos:      file_svc_organization_v1_service_proto_msgTypes,
	}.Build()
	File_svc_organization_v1_service_proto = out.File
	file_svc_organization_v1_service_proto_rawDesc = nil
	file_svc_organization_v1_service_proto_goTypes = nil
	file_svc_organization_v1_service_proto_depIdxs = nil
}
