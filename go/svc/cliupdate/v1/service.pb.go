// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: svc/cliupdate/v1/service.proto

package cliupdatev1

import (
	v1 "github.com/humanlog-io/api/go/types/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetNextUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentVersion *v1.Version        `protobuf:"bytes,1,opt,name=current_version,json=currentVersion,proto3" json:"current_version,omitempty"`
	Info           *UpdateRequestInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *GetNextUpdateRequest) Reset() {
	*x = GetNextUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_cliupdate_v1_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNextUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNextUpdateRequest) ProtoMessage() {}

func (x *GetNextUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_cliupdate_v1_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNextUpdateRequest.ProtoReflect.Descriptor instead.
func (*GetNextUpdateRequest) Descriptor() ([]byte, []int) {
	return file_svc_cliupdate_v1_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetNextUpdateRequest) GetCurrentVersion() *v1.Version {
	if x != nil {
		return x.CurrentVersion
	}
	return nil
}

func (x *GetNextUpdateRequest) GetInfo() *UpdateRequestInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetNextUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextVersion *v1.Version `protobuf:"bytes,1,opt,name=next_version,json=nextVersion,proto3" json:"next_version,omitempty"`
}

func (x *GetNextUpdateResponse) Reset() {
	*x = GetNextUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_cliupdate_v1_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNextUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNextUpdateResponse) ProtoMessage() {}

func (x *GetNextUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_cliupdate_v1_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNextUpdateResponse.ProtoReflect.Descriptor instead.
func (*GetNextUpdateResponse) Descriptor() ([]byte, []int) {
	return file_svc_cliupdate_v1_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetNextUpdateResponse) GetNextVersion() *v1.Version {
	if x != nil {
		return x.NextVersion
	}
	return nil
}

type UpdateRequestInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatingSystem string `protobuf:"bytes,1,opt,name=operating_system,json=operatingSystem,proto3" json:"operating_system,omitempty"`
	Architecture    string `protobuf:"bytes,2,opt,name=architecture,proto3" json:"architecture,omitempty"`
	MachineId       string `protobuf:"bytes,3,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
	AccountId       string `protobuf:"bytes,4,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (x *UpdateRequestInfo) Reset() {
	*x = UpdateRequestInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_cliupdate_v1_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequestInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequestInfo) ProtoMessage() {}

func (x *UpdateRequestInfo) ProtoReflect() protoreflect.Message {
	mi := &file_svc_cliupdate_v1_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequestInfo.ProtoReflect.Descriptor instead.
func (*UpdateRequestInfo) Descriptor() ([]byte, []int) {
	return file_svc_cliupdate_v1_service_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateRequestInfo) GetOperatingSystem() string {
	if x != nil {
		return x.OperatingSystem
	}
	return ""
}

func (x *UpdateRequestInfo) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

func (x *UpdateRequestInfo) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

func (x *UpdateRequestInfo) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

var File_svc_cliupdate_v1_service_proto protoreflect.FileDescriptor

var file_svc_cliupdate_v1_service_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x73, 0x76, 0x63, 0x2f, 0x63, 0x6c, 0x69, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x10, 0x73, 0x76, 0x63, 0x2e, 0x63, 0x6c, 0x69, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e,
	0x76, 0x31, 0x1a, 0x16, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8b, 0x01, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x37, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x73, 0x76, 0x63, 0x2e, 0x63, 0x6c, 0x69, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x4d, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4e,
	0x65, 0x78, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x34, 0x0a, 0x0c, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x6e, 0x65, 0x78, 0x74,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xa0, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x0a,
	0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x72, 0x63, 0x68,
	0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x32, 0x73, 0x0a, 0x0d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x62, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x26, 0x2e, 0x73,
	0x76, 0x63, 0x2e, 0x63, 0x6c, 0x69, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x63, 0x6c, 0x69, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0xc2, 0x01, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x63, 0x6c, 0x69, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6c, 0x6f, 0x67, 0x2d, 0x69, 0x6f,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x76, 0x63, 0x2f, 0x63, 0x6c, 0x69, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x6c, 0x69, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x53, 0x43, 0x58, 0xaa, 0x02, 0x10, 0x53, 0x76, 0x63,
	0x2e, 0x43, 0x6c, 0x69, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x10,
	0x53, 0x76, 0x63, 0x5c, 0x43, 0x6c, 0x69, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5c, 0x56, 0x31,
	0xe2, 0x02, 0x1c, 0x53, 0x76, 0x63, 0x5c, 0x43, 0x6c, 0x69, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x12, 0x53, 0x76, 0x63, 0x3a, 0x3a, 0x43, 0x6c, 0x69, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_svc_cliupdate_v1_service_proto_rawDescOnce sync.Once
	file_svc_cliupdate_v1_service_proto_rawDescData = file_svc_cliupdate_v1_service_proto_rawDesc
)

func file_svc_cliupdate_v1_service_proto_rawDescGZIP() []byte {
	file_svc_cliupdate_v1_service_proto_rawDescOnce.Do(func() {
		file_svc_cliupdate_v1_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_svc_cliupdate_v1_service_proto_rawDescData)
	})
	return file_svc_cliupdate_v1_service_proto_rawDescData
}

var file_svc_cliupdate_v1_service_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_svc_cliupdate_v1_service_proto_goTypes = []interface{}{
	(*GetNextUpdateRequest)(nil),  // 0: svc.cliupdate.v1.GetNextUpdateRequest
	(*GetNextUpdateResponse)(nil), // 1: svc.cliupdate.v1.GetNextUpdateResponse
	(*UpdateRequestInfo)(nil),     // 2: svc.cliupdate.v1.UpdateRequestInfo
	(*v1.Version)(nil),            // 3: types.v1.Version
}
var file_svc_cliupdate_v1_service_proto_depIdxs = []int32{
	3, // 0: svc.cliupdate.v1.GetNextUpdateRequest.current_version:type_name -> types.v1.Version
	2, // 1: svc.cliupdate.v1.GetNextUpdateRequest.info:type_name -> svc.cliupdate.v1.UpdateRequestInfo
	3, // 2: svc.cliupdate.v1.GetNextUpdateResponse.next_version:type_name -> types.v1.Version
	0, // 3: svc.cliupdate.v1.UpdateService.GetNextUpdate:input_type -> svc.cliupdate.v1.GetNextUpdateRequest
	1, // 4: svc.cliupdate.v1.UpdateService.GetNextUpdate:output_type -> svc.cliupdate.v1.GetNextUpdateResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_svc_cliupdate_v1_service_proto_init() }
func file_svc_cliupdate_v1_service_proto_init() {
	if File_svc_cliupdate_v1_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_svc_cliupdate_v1_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNextUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_cliupdate_v1_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNextUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_cliupdate_v1_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequestInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_svc_cliupdate_v1_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_svc_cliupdate_v1_service_proto_goTypes,
		DependencyIndexes: file_svc_cliupdate_v1_service_proto_depIdxs,
		MessageInfos:      file_svc_cliupdate_v1_service_proto_msgTypes,
	}.Build()
	File_svc_cliupdate_v1_service_proto = out.File
	file_svc_cliupdate_v1_service_proto_rawDesc = nil
	file_svc_cliupdate_v1_service_proto_goTypes = nil
	file_svc_cliupdate_v1_service_proto_depIdxs = nil
}
