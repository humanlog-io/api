// @generated by protoc-gen-connect-query v1.4.1 with parameter "target=ts,import_extension=none"
// @generated from file svc/organization/v1/service.proto (package svc.organization.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { MethodKind } from "@bufbuild/protobuf";
import { CreateEnvironmentRequest, CreateEnvironmentResponse, InviteUserRequest, InviteUserResponse, ListEnvironmentRequest, ListEnvironmentResponse, ListUserRequest, ListUserResponse, RevokeUserRequest, RevokeUserResponse } from "./service_pb";

/**
 * @generated from rpc svc.organization.v1.OrganizationService.CreateEnvironment
 */
export const createEnvironment = {
  localName: "createEnvironment",
  name: "CreateEnvironment",
  kind: MethodKind.Unary,
  I: CreateEnvironmentRequest,
  O: CreateEnvironmentResponse,
  service: {
    typeName: "svc.organization.v1.OrganizationService"
  }
} as const;

/**
 * @generated from rpc svc.organization.v1.OrganizationService.ListEnvironment
 */
export const listEnvironment = {
  localName: "listEnvironment",
  name: "ListEnvironment",
  kind: MethodKind.Unary,
  I: ListEnvironmentRequest,
  O: ListEnvironmentResponse,
  service: {
    typeName: "svc.organization.v1.OrganizationService"
  }
} as const;

/**
 * @generated from rpc svc.organization.v1.OrganizationService.ListUser
 */
export const listUser = {
  localName: "listUser",
  name: "ListUser",
  kind: MethodKind.Unary,
  I: ListUserRequest,
  O: ListUserResponse,
  service: {
    typeName: "svc.organization.v1.OrganizationService"
  }
} as const;

/**
 * @generated from rpc svc.organization.v1.OrganizationService.InviteUser
 */
export const inviteUser = {
  localName: "inviteUser",
  name: "InviteUser",
  kind: MethodKind.Unary,
  I: InviteUserRequest,
  O: InviteUserResponse,
  service: {
    typeName: "svc.organization.v1.OrganizationService"
  }
} as const;

/**
 * @generated from rpc svc.organization.v1.OrganizationService.RevokeUser
 */
export const revokeUser = {
  localName: "revokeUser",
  name: "RevokeUser",
  kind: MethodKind.Unary,
  I: RevokeUserRequest,
  O: RevokeUserResponse,
  service: {
    typeName: "svc.organization.v1.OrganizationService"
  }
} as const;
